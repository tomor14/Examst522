{
    "contents" : "#' @export\n#' @title Chi-squared probability\n#' @usage chi.probability(x, df, n)\n#' @keywords chi-squared probability\n#' @description Use Monte Carlo to generate a chi-squared distribution and calculate the p-value for the distribution.\n#' @param x is the value for which the function calculate the p-value. x has to be numeric.\n#' @param df is the degrees of freedom by generating n number of random numbers for each variable. df has to be a positive integer.\n#' @param n is the number af random nubers for each variable. n has to be a positive integer.\n#' @return Returns the p-value for the chi-squared distribution.\n#' @author Tobias Mortensen \\cr\n#' Department of mathematics and computer science (IMADA) \\cr\n#' University of southern Denmark, Odense \\cr\n#' \\email{tomor14@student.sdu.dk} \\cr\n#' @examples chi.probability(x=15, df=19, n=10000)\n\nchi.probability <- function(x, df = 1, n = 1){\n  if(missing(x)){\n    stop(\"x is missing\")\n  }\n  if(!is.numeric(x)){\n    stop(\"x has to be numeric\")\n  }\n  if(df!=as.integer(df) || df < 1){\n    stop(\"df has to be a positve integer\")\n  }\n  if(n!=as.integer(n) || n < 1){\n    stop(\"n has to be a positve integer\")\n  }\n  chi <- rnorm(n)^2\n  if(df > 1){\n    for(i in 2:df){\n      chi <- rnorm(n)^2 + chi\n    }\n  }\n  cdf <- ecdf(chi)\n  a <- 1-cdf(x)\n  return(a)\n}\n",
    "created" : 1465414731856.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3112488018",
    "id" : "1A7FA69B",
    "lastKnownWriteTime" : 1465514564,
    "path" : "~/Documents/Exam/R/chi.probability.R",
    "project_path" : "R/chi.probability.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}